{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nfunction useTimer() {\n  _s();\n\n  const [number, setNumber] = useState(1);\n  const [isMultiple, setMultiple] = useState(false);\n  const [timer, setTimer] = useState(1);\n  const TIMER_INTERVAL = 1000;\n  const NUMBER_TIMEOUT = 10000;\n  const MESSAGE_TIMEOUT = 4000;\n  const MIN_RANDOM = 1;\n  const MAX_RANDOM = 100;\n\n  const increaseTimerInterval = () => setTimer(timer => timer + 1);\n\n  const verifyMultiple = randomNumber => {\n    if (randomNumber % 3 === 0 || randomNumber % 5 === 0) {\n      setMultiple(true);\n      setTimeout(() => setMultiple(false), MESSAGE_TIMEOUT);\n    }\n  };\n\n  const handleRandomNumber = () => {\n    // Vamos retornar um número aleatório de 1 a 100.\n    const randomNumber = Math.round(\n    /* O Math.random retorna um valor entre 0 e 1, com o 0 incluso, então o cálculo será multiplicar o valor aleatório por 100, e com o uso do Math.floor o resultado será um valor entre 0 e 99, após somar mais 1, o menor valor será 1 e o maior valor será 100 */\n    Math.floor(Math.random() * MAX_RANDOM) + MIN_RANDOM);\n    verifyMultiple(randomNumber);\n    setNumber(randomNumber);\n    setTimer(0);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(handleRandomNumber, NUMBER_TIMEOUT);\n    const setTimerInterval = setInterval(increaseTimerInterval, TIMER_INTERVAL);\n    return () => {\n      clearInterval(interval);\n      clearInterval(setTimerInterval);\n    };\n  }, []);\n  return {\n    number,\n    isMultiple,\n    timer\n  };\n}\n\n_s(useTimer, \"KRU5vxyx+xYZiIRMwkCebizbcgE=\");\n\nexport default useTimer;","map":{"version":3,"names":["useState","useEffect","useTimer","number","setNumber","isMultiple","setMultiple","timer","setTimer","TIMER_INTERVAL","NUMBER_TIMEOUT","MESSAGE_TIMEOUT","MIN_RANDOM","MAX_RANDOM","increaseTimerInterval","verifyMultiple","randomNumber","setTimeout","handleRandomNumber","Math","round","floor","random","interval","setInterval","setTimerInterval","clearInterval"],"sources":["/home/ronan/trybe-exercicios/front-end/bloco-17-context-api-e-react-hooks/dia-3-react-hooks-useeffect-e-hooks-customizados/react-hooks-useeffect/src/hooks/useTimer.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction useTimer() {\n  const [number, setNumber] = useState(1);\n  const [isMultiple, setMultiple] = useState(false);\n  const [timer, setTimer] = useState(1);\n\n  const TIMER_INTERVAL = 1000;\n  const NUMBER_TIMEOUT = 10000;\n  const MESSAGE_TIMEOUT = 4000;\n  const MIN_RANDOM = 1;\n  const MAX_RANDOM = 100;\n\n  const increaseTimerInterval = () => setTimer(timer => timer + 1);\n\n  const verifyMultiple = randomNumber => {\n    if (randomNumber % 3 === 0 || randomNumber % 5 === 0) {\n      setMultiple(true);\n      setTimeout(() => setMultiple(false), MESSAGE_TIMEOUT);\n    }\n  };\n\n  const handleRandomNumber = () => {\n    // Vamos retornar um número aleatório de 1 a 100.\n    const randomNumber = Math.round(\n      /* O Math.random retorna um valor entre 0 e 1, com o 0 incluso, então o cálculo será multiplicar o valor aleatório por 100, e com o uso do Math.floor o resultado será um valor entre 0 e 99, após somar mais 1, o menor valor será 1 e o maior valor será 100 */\n      Math.floor(Math.random() * MAX_RANDOM) + MIN_RANDOM\n    );\n    verifyMultiple(randomNumber);\n    setNumber(randomNumber);\n    setTimer(0);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(handleRandomNumber, NUMBER_TIMEOUT);\n    const setTimerInterval = setInterval(increaseTimerInterval, TIMER_INTERVAL);\n    return () => {\n      clearInterval(interval);\n      clearInterval(setTimerInterval);\n    };\n  }, []);\n\n  return { number, isMultiple, timer };\n}\n\nexport default useTimer;"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAApC;EACA,MAAM,CAACK,UAAD,EAAaC,WAAb,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;EAEA,MAAMS,cAAc,GAAG,IAAvB;EACA,MAAMC,cAAc,GAAG,KAAvB;EACA,MAAMC,eAAe,GAAG,IAAxB;EACA,MAAMC,UAAU,GAAG,CAAnB;EACA,MAAMC,UAAU,GAAG,GAAnB;;EAEA,MAAMC,qBAAqB,GAAG,MAAMN,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAA5C;;EAEA,MAAMQ,cAAc,GAAGC,YAAY,IAAI;IACrC,IAAIA,YAAY,GAAG,CAAf,KAAqB,CAArB,IAA0BA,YAAY,GAAG,CAAf,KAAqB,CAAnD,EAAsD;MACpDV,WAAW,CAAC,IAAD,CAAX;MACAW,UAAU,CAAC,MAAMX,WAAW,CAAC,KAAD,CAAlB,EAA2BK,eAA3B,CAAV;IACD;EACF,CALD;;EAOA,MAAMO,kBAAkB,GAAG,MAAM;IAC/B;IACA,MAAMF,YAAY,GAAGG,IAAI,CAACC,KAAL;IACnB;IACAD,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,KAAgBT,UAA3B,IAAyCD,UAFtB,CAArB;IAIAG,cAAc,CAACC,YAAD,CAAd;IACAZ,SAAS,CAACY,YAAD,CAAT;IACAR,QAAQ,CAAC,CAAD,CAAR;EACD,CATD;;EAWAP,SAAS,CAAC,MAAM;IACd,MAAMsB,QAAQ,GAAGC,WAAW,CAACN,kBAAD,EAAqBR,cAArB,CAA5B;IACA,MAAMe,gBAAgB,GAAGD,WAAW,CAACV,qBAAD,EAAwBL,cAAxB,CAApC;IACA,OAAO,MAAM;MACXiB,aAAa,CAACH,QAAD,CAAb;MACAG,aAAa,CAACD,gBAAD,CAAb;IACD,CAHD;EAID,CAPQ,EAON,EAPM,CAAT;EASA,OAAO;IAAEtB,MAAF;IAAUE,UAAV;IAAsBE;EAAtB,CAAP;AACD;;GAzCQL,Q;;AA2CT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}